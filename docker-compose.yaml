version: "3.8"

networks:
  project_network:
    driver: bridge

services:
  php:
    container_name: ${PROJECT_NAME}-php
    build:
      context: .
      dockerfile: .docker/php-fpm/Dockerfile
    depends_on:
      - postgresql
      - redis
      - mysql
    working_dir: /var/www
    volumes:
      - ./.docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
      # - ./.docker/php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./code/:/var/www:delegated
    networks:
      - project_network
    tty: true
    restart: unless-stopped

  server:
    container_name: ${PROJECT_NAME}-server
    image: nginx:stable-alpine
    depends_on:
      - postgresql
      - redis
      - mysql
    ports:
      - 80:80
      - 443:443
    links:
      - php:php
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/ssl/:/etc/nginx/ssl/
      - ./code:/var/www
    networks:
      - project_network
    tty: true
    restart: unless-stopped

  postgresql:
    container_name: ${PROJECT_NAME}-postgres
    image: postgres:14
    hostname: ${PROJECT_NAME}_postgresql_host
    env_file:
      - ./.docker/postgresql/config.ini
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - project_network
    tty: true
    restart: unless-stopped

  pgadmin:
    container_name: ${PROJECT_NAME}-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgresql
    env_file:
      - ./.docker/pgadmin/config.ini
    ports:
      - ${PGADMIN_PORT:-5050}:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - project_network
    links:
      - postgresql
    tty: true
    restart: unless-stopped

  redis:
    container_name: ${PROJECT_NAME}-redis
    image: redis:alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    env_file:
      - ./.docker/redis/config.ini
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis:/data
    networks:
      - project_network
    tty: true
    restart: unless-stopped

  mysql:
    container_name: ${PROJECT_NAME}-mysql
    image: mysql:latest
    hostname: ${PROJECT_NAME}_mysql_host
    env_file:
      - ./.docker/mysql/config.ini
    ports:
      - ${MYSQL_PORT:-3306}:3306
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - project_network
    tty: true
    restart: unless-stopped

  adminer:
    container_name: ${PROJECT_NAME}-adminer
    image: adminer
    depends_on:
      - postgresql
      - mysql
    ports:
      - ${ADMINER_PORT:-8080}:8080
    networks:
      - project_network
    links:
      - postgresql
    tty: true
    restart: unless-stopped

volumes:
  postgresql:
    driver: local
    name: ${PROJECT_NAME}_postgresql
  pgadmin:
    driver: local
    name: ${PROJECT_NAME}_pgadmin
  redis:
    driver: local
    name: ${PROJECT_NAME}_redis
  mysql:
    driver: local
    name: ${PROJECT_NAME}_mysql
